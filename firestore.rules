rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow all reads and writes to the events collection
    // This is suitable for a controlled, time-limited event
    // For production, consider more restrictive rules
    match /events/{eventId}/{document=**} {
      // Allow anyone with anonymous auth to read all documents
      allow read: if request.auth != null;
      
      // Allow anyone with anonymous auth to write to users and bids
      allow create: if request.auth != null && 
                      (resource == null || 
                       request.resource.data.keys().hasAny(['name', 'wallet', 'isTeamMember', 'registeredAt']));
      
      // Allow users to update their own user document
      allow update: if request.auth != null;
      
      // Allow delete only if authenticated (for admin cleanup)
      allow delete: if request.auth != null;
    }
    
    // Specific rules for state document (admin only operations)
    match /events/{eventId}/state/state {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Specific rules for projects
    match /events/{eventId}/projects/{projectId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }
    
    // Specific rules for users
    match /events/{eventId}/users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }
  }
}
